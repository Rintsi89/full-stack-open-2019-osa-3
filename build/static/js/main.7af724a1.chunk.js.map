{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/personService.js","App.js","index.js"],"names":["Filter","_ref","handleSearch","react_default","a","createElement","onChange","PersonForm","addName","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","type","Person","name","number","id","deleteName","onClick","Persons","filteredPersons","map","filteredPerson","components_Person","key","Notification","message","status","className","baseUrl","personService","axios","get","then","response","data","personObject","post","delete","concat","newPerson","put","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilteredPersons","_useState9","_useState10","setMessage","_useState11","_useState12","setStatus","useEffect","initialPersons","components_Notification","components_Filter","event","searchTerm","target","toLowerCase","filteredArray","filter","person","includes","components_PersonForm","preventDefault","some","samePerson","find","window","confirm","changedPerson","objectSpread","returnedPerson","setTimeout","catch","e","alert","trim","undefined","returnPerson","error","components_Persons","updatedPersons","deletedPerson","ReactDOM","render","src_App","document","getElementById"],"mappings":"6MAIeA,EAFA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OAAsBC,EAAAC,EAAAC,cAAA,iCAAwBF,EAAAC,EAAAC,cAAA,SAAOC,SAAUJ,MCe/DK,EAfI,SAAAN,GAAA,IAAIO,EAAJP,EAAIO,QAASC,EAAbR,EAAaQ,iBAAkBC,EAA/BT,EAA+BS,mBAAoBC,EAAnDV,EAAmDU,QAASC,EAA5DX,EAA4DW,UAA5D,OACfT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMQ,SAAUL,GACZL,EAAAC,EAAAC,cAAA,oBACUF,EAAAC,EAAAC,cAAA,SAAOS,MAAOH,EAASL,SAAUG,KAE3CN,EAAAC,EAAAC,cAAA,sBACYF,EAAAC,EAAAC,cAAA,SAAOS,MAAOF,EAAWN,SAAUI,KAE/CP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQU,KAAK,UAAb,WCJDC,EANA,SAAAf,GAAsC,IAAnCgB,EAAmChB,EAAnCgB,KAAMC,EAA6BjB,EAA7BiB,OAAQC,EAAqBlB,EAArBkB,GAAIC,EAAiBnB,EAAjBmB,WAChC,OACQjB,EAAAC,EAAAC,cAAA,UAAKY,EAAL,IAAYC,EAAZ,IAAoBf,EAAAC,EAAAC,cAAA,UAAQgB,QAAS,kBAAMD,EAAWH,EAAME,KAAxC,UAApB,MCgBGG,EAjBC,SAAArB,GAAsC,IAAlCsB,EAAkCtB,EAAlCsB,gBAAiBH,EAAiBnB,EAAjBmB,WASjC,OACIjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UATWkB,EAAgBC,IAAI,SAAAC,GAAc,OACjDtB,EAAAC,EAAAC,cAACqB,EAAD,CAAQT,KAAMQ,EAAeR,KAC7BC,OAAQO,EAAeP,OACvBC,GAAIM,EAAeN,GACnBC,WAAYA,EACZO,IAAKF,EAAeN,UCYbS,EApBM,SAAA3B,GAAyB,IAAtB4B,EAAsB5B,EAAtB4B,QAASC,EAAa7B,EAAb6B,OAC7B,OAAgB,OAAZD,EACO,KAGI,UAAXC,EAEI3B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,SACVF,GAMT1B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,WACVF,oBCfPG,EAAU,eAsBDC,EApBA,WAEX,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB9BL,EAfA,SAAAM,GAEX,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa9BL,EAVM,SAACd,GAElB,OADgBe,IAAMO,OAAN,GAAAC,OAAgBV,EAAhB,KAAAU,OAA2BvB,IAC5BiB,KAAK,kBAAMjB,KAQfc,EALM,SAACd,EAAIwB,GAEtB,OADgBT,IAAMU,IAAN,GAAAF,OAAaV,EAAb,KAAAU,OAAwBvB,GAAMwB,GAC/BP,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCyH9BO,EAvIH,WAAM,IAAAC,EACgBC,mBAAS,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACEI,EADFJ,EAAA,GAAAK,EAEgBN,mBAAS,IAFzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEP1C,EAFO2C,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGoBT,mBAAS,IAH7BU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGP5C,EAHO6C,EAAA,GAGIC,EAHJD,EAAA,GAAAE,EAIgCZ,mBAAS,IAJzCa,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAIPpC,EAJOqC,EAAA,GAIUC,EAJVD,EAAA,GAAAE,EAKgBf,mBAAS,MALzBgB,EAAAd,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GAKPjC,EALOkC,EAAA,GAKEC,EALFD,EAAA,GAAAE,EAMclB,mBAAS,MANvBmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAMPnC,EANOoC,EAAA,GAMCC,EANDD,EAAA,GAkBdE,oBATa,WACTnC,IAEKG,KAAK,SAAAiC,GACFjB,EAAWiB,GACXR,EAAmBQ,MAIf,IAuGhB,OACIlE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACiE,EAAD,CAAczC,QAASA,EAASC,OAAQA,IACpC3B,EAAAC,EAAAC,cAACkE,EAAD,CAAQrE,aAVC,SAACsE,GAClB,IAAMC,EAAaD,EAAME,OAAO5D,MAAM6D,cAChCC,EAAgBzB,EAAQ0B,OAAO,SAAAC,GAAM,OAAIA,EAAO7D,KAAK0D,cAAcI,SAASN,KAClFZ,EAAmBe,MAQfzE,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC2E,EAAD,CAAYxE,QA3GJ,SAACgE,GAGb,GAFAA,EAAMS,iBAEF9B,EAAQ+B,KAAK,SAAAJ,GAAM,OAAIA,EAAO7D,KAAK0D,gBAAkBhE,EAAQgE,gBAAgB,CAE7E,IAAMQ,EAAahC,EAAQiC,KAAK,SAAAN,GAAM,OAAIA,EAAO7D,KAAK0D,gBAAkBhE,EAAQgE,gBAEhF,GAAIQ,EAAWjE,SAAWN,EAAW,CAEjC,GAAIyE,OAAOC,QAAP,GAAA5C,OAAkByC,EAAWlE,KAA7B,yEAA0G,CAC1G,IAAMsE,EAAatC,OAAAuC,EAAA,EAAAvC,CAAA,GAAQkC,EAAR,CAAoBjE,OAAQN,IAC/CqB,EACkBkD,EAAWhE,GAAIoE,GAC5BnD,KAAK,SAAAqD,GACFrC,EAAWD,EAAQ3B,IAAI,SAAAsD,GAAM,OAAIA,EAAO3D,KAAOgE,EAAWhE,GAAK2D,EAASW,KACxE5B,EAAmBV,EAAQ3B,IAAI,SAAAsD,GAAM,OAAIA,EAAO3D,KAAOgE,EAAWhE,GAAK2D,EAASW,KAChFlC,EAAW,IACXG,EAAa,IACbM,EAAU,sBAAAtB,OAAuB+C,EAAexE,OAChDyE,WAAW,WACP1B,EAAW,OACZ,OACJ2B,MAAM,SAACC,GACN5B,EAAU,GAAAtB,OAAIyC,EAAWlE,KAAf,gDACVkD,EAAU,SACVZ,EAAW,IACXG,EAAa,IACbgC,WAAW,WACP1B,EAAW,MACXG,EAAU,OACX,OAGf,OAIA,OAFAZ,EAAW,IACXG,EAAa,IACNmC,MAAK,GAAAnD,OAAIyC,EAAWlE,KAAf,iBAAAyB,OAAmCyC,EAAWjE,OAA9C,sCAIpB,IAAMqB,EAAe,CACjBtB,KAAMN,EAAQmF,OACd5E,OAAQN,EACRO,QAAI4E,GAGR9D,EACYM,GACPH,KAAK,SAAA4D,GACF5C,EAAWD,EAAQT,OAAOsD,IAC1BnC,EAAmBV,EAAQT,OAAOsD,IAClCzC,EAAW,IACXG,EAAa,IACbM,EAAU,SAAAtB,OAAUsD,EAAa/E,OACjCyE,WAAW,WACP1B,EAAW,OACZ,OACJ2B,MAAM,SAACC,GACM5B,EAAW4B,EAAEvD,SAASC,KAAK2D,MAAMpE,SACjCsC,EAAU,SACVZ,EAAW,IACXG,EAAa,IACbgC,WAAW,WACP1B,EAAW,MACXG,EAAU,OACX,QAyCW1D,iBApBb,SAAC+D,GACtBjB,EAAWiB,EAAME,OAAO5D,QAmB8CJ,mBAhB/C,SAAC8D,GACxBd,EAAac,EAAME,OAAO5D,QAgBlBH,QAASA,EAASC,UAAWA,IACjCT,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC6F,EAAD,CAAS3E,gBAAiBA,EAAiBH,WAxChC,SAACH,EAAME,GAElBkE,OAAOC,QAAP,gCAAA5C,OAA+CzB,KAC/CgB,EAA2Bd,GACtBiB,KAAK,SAACjB,GACH,IAAMgF,EAAiBhD,EAAQ0B,OAAO,SAAAC,GAAM,OAAIA,EAAO3D,KAAOA,IACxDiF,EAAgBjD,EAAQiC,KAAK,SAAAN,GAAM,OAAIA,EAAO3D,KAAOA,IAC3DiC,EAAW+C,GACXtC,EAAmBsC,GACnBnC,EAAU,WAAAtB,OAAY0D,EAAcnF,OACpCyE,WAAW,WACP1B,EAAW,OACZ,kBCxGvBqC,IAASC,OACLnG,EAAAC,EAAAC,cAACkG,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.7af724a1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ handleSearch }) => <div>Filter shown with: <input onChange={handleSearch} /></div>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ( { addName, handleNameChange, handleNumberChange, newName, newNumber}) => \r\n    <div>\r\n        <form onSubmit={addName}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ name, number, id, deleteName }) => {\r\n    return (\r\n            <li>{name} {number} <button onClick={() => deleteName(name, id)}>Delete</button> </li>     \r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ( { filteredPersons, deleteName }) => {\r\n    \r\n    const rows = () => filteredPersons.map(filteredPerson => \r\n        <Person name={filteredPerson.name}\r\n        number={filteredPerson.number}\r\n        id={filteredPerson.id}\r\n        deleteName={deleteName}\r\n        key={filteredPerson.id} />)\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {rows()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, status }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (status === \"Error\") {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )        \r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = personObject => {\r\n    const request = axios.post(baseUrl, personObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(() => id )\r\n}\r\n\r\nconst updateNumber = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, updateNumber }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personService from './services/personService'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filteredPersons, setFilteredPersons] = useState([])\n    const [message, setMessage] = useState(null)\n    const [status, setStatus] = useState(null)\n\n    \n    const hook = () => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n                setFilteredPersons(initialPersons)\n            })\n    }\n\n    useEffect(hook, [])\n\n    const addName = (event) => {\n        event.preventDefault()\n\n        if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\n\n            const samePerson = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n\n            if (samePerson.number !== newNumber) {\n\n                if (window.confirm(`${samePerson.name} is already added to phonebook. Do you want to replace phone number?`)) {\n                    const changedPerson = { ...samePerson, number: newNumber }\n                    personService\n                        .updateNumber(samePerson.id, changedPerson)\n                        .then(returnedPerson => {\n                            setPersons(persons.map(person => person.id !== samePerson.id ? person : returnedPerson))\n                            setFilteredPersons(persons.map(person => person.id !== samePerson.id ? person : returnedPerson))\n                            setNewName(\"\")\n                            setNewNumber(\"\")\n                            setMessage(`Updated number for ${returnedPerson.name}`)\n                            setTimeout(() => {\n                                setMessage(null)\n                            }, 3000)\n                        }).catch((e) => {                            \n                            setMessage(`${samePerson.name} has been already removed from the database`)\n                            setStatus(\"Error\")\n                            setNewName(\"\")\n                            setNewNumber(\"\")\n                            setTimeout(() => {\n                                setMessage(null)\n                                setStatus(null)\n                            }, 3000)\n                        })  \n                }\n                return\n            } else {\n                setNewName(\"\")\n                setNewNumber(\"\")\n                return alert(`${samePerson.name} with number ${samePerson.number} is already added to the database`)\n            }\n        }\n\n        const personObject = {\n            name: newName.trim(),\n            number: newNumber,\n            id: undefined\n        }\n\n        personService\n            .create(personObject)\n            .then(returnPerson => {\n                setPersons(persons.concat(returnPerson))\n                setFilteredPersons(persons.concat(returnPerson))\n                setNewName(\"\")\n                setNewNumber(\"\")\n                setMessage(`Added ${returnPerson.name}`)\n                setTimeout(() => {\n                    setMessage(null)\n                }, 3000)\n            }).catch((e) => {\n                            setMessage(e.response.data.error.message)\n                            setStatus(\"Error\")\n                            setNewName(\"\")\n                            setNewNumber(\"\")\n                            setTimeout(() => {\n                                setMessage(null)\n                                setStatus(null)\n                            }, 3000)\n                        }) \n    }\n\n    const deleteName = (name, id) => {\n\n        if (window.confirm(`Do you really want to remove ${name}`)) {\n            personService.deletePerson(id)\n                .then((id) => {\n                    const updatedPersons = persons.filter(person => person.id !== id)\n                    const deletedPerson = persons.find(person => person.id === id)\n                    setPersons(updatedPersons)\n                    setFilteredPersons(updatedPersons)\n                    setMessage(`Deleted ${deletedPerson.name}`)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 3000)\n                }) \n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleSearch = (event) => {\n        const searchTerm = event.target.value.toLowerCase()\n        const filteredArray = persons.filter(person => person.name.toLowerCase().includes(searchTerm))\n        setFilteredPersons(filteredArray)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} status={status}/>\n                <Filter handleSearch={handleSearch} />\n            <h2>Add new</h2>\n            <PersonForm addName={addName} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n                newName={newName} newNumber={newNumber}/>\n            <h2>Numbers</h2>\n            <Persons filteredPersons={filteredPersons} deleteName={deleteName}/>\n    </div>\n    )\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}